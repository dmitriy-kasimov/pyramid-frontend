
type UserType = {
    id: number
    name: string
    age: number
}
const collection:UserType[]  = [
    {id: 7, name: 'Dima', age: 23},
    {id: 3, name: 'Vitalya', age: 66},
    {id: 6, name: 'Oleg', age: 23 },
    {id: 123, name: 'Maxim', age: 18 },
    {id: 8, name: 'Ruslan', age: 20 },
    {id: 10, name: 'Nikita', age: 15 },
]

const binarySearch = <T, K>(collection: T[], key: keyof T, value: K): T | null => {
    let from = 0;
    let to = collection.length-1

    do{
        let middle = Math.floor((from+to)/2)
        const current = collection[middle][key]
        if(value < current)
            to = middle - 1
        else if (value > current)
            from = middle + 1
        else 
            return collection[middle]
    } while(from <= to)
    return null
}

console.log(binarySearch<UserType, number>(collection, 'id', 123))
